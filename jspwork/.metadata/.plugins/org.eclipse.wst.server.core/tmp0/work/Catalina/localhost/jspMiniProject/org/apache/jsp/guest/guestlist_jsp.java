/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-09 03:32:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.guest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.Dto.AnswerDto;
import data.Dao.AnswerDao;
import data.Dao.MemberDao;
import java.text.SimpleDateFormat;
import data.Dto.GuestDto;
import java.util.List;
import data.Dao.GuestDao;

public final class guestlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.Dao.MemberDao");
    _jspx_imports_classes.add("data.Dto.AnswerDto");
    _jspx_imports_classes.add("data.Dao.GuestDao");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("data.Dao.AnswerDao");
    _jspx_imports_classes.add("data.Dto.GuestDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("        href=\"https://fonts.googleapis.com/css2?family=Anton&family=Edu+VIC+WA+NT+Beginner:wght@600&family=Gamja+Flower&family=Single+Day&family=Jua&family=Nanum+Pen+Script&display=swap\"\r\n");
      out.write("        rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("   span.day{\r\n");
      out.write("   	float: right;\r\n");
      out.write("   	font-size: 11pt;\r\n");
      out.write("   	color: gray;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  $(function(){\r\n");
      out.write("	  \r\n");
      out.write("	  $(\"span.likes\").click(function(){\r\n");
      out.write("		  \r\n");
      out.write("		var num = $(this).attr(\"num\");\r\n");
      out.write("		var tag=$(this);\r\n");
      out.write("		\r\n");
      out.write("		//alert(num);\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			url:\"guest/ajaxlikechu.jsp\",\r\n");
      out.write("			data:{\"num\":num},\r\n");
      out.write("			success:function(res){\r\n");
      out.write("				\r\n");
      out.write("				//alert(res.chu);\r\n");
      out.write("				tag.next().text(res.chu);\r\n");
      out.write("				\r\n");
      out.write("				tag.next().next().animate({\"font-size\":\"20px\"},1000,function(){\r\n");
      out.write("					\r\n");
      out.write("					//애니메이션이 끝난후 글꼴크기 0px\r\n");
      out.write("					$(this).css(\"font-size\",\"0px\")\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  \r\n");
      out.write("	  \r\n");
      out.write("	  //댓글부분은 무조건 안보이게\r\n");
      out.write("	  $(\"div.answer\").hide();\r\n");
      out.write("	  \r\n");
      out.write("	  //댓글클릭시 댓글부분이 보였다 안보였다 하기\r\n");
      out.write("	  $(\"span.answer\").click(function(){\r\n");
      out.write("		  \r\n");
      out.write("		 // $(\"div.answer\").toggle();\r\n");
      out.write("		 $(this).parent().find(\"div.answer\").toggle();\r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  \r\n");
      out.write("	  //댓글삭제 이벤트\r\n");
      out.write("	  $(\"span.adel\").click(function(){\r\n");
      out.write("		  \r\n");
      out.write("		  var idx=$(this).attr(\"idx\");\r\n");
      out.write("		  //alert(idx);\r\n");
      out.write("		  \r\n");
      out.write("		  $.ajax({\r\n");
      out.write("			  \r\n");
      out.write("			  type:\"get\",\r\n");
      out.write("			  dataType:\"html\",\r\n");
      out.write("			  url:\"guest/answerdelete.jsp\",\r\n");
      out.write("			  data:{\"idx\":idx},\r\n");
      out.write("			  success:function(){\r\n");
      out.write("				  \r\n");
      out.write("				  //새로고침\r\n");
      out.write("				  location.reload();\r\n");
      out.write("			  }\r\n");
      out.write("		  });\r\n");
      out.write("		  \r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  \r\n");
      out.write("	  \r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");

   //로그인상태 확인후 입력폼 나타내기
   String loginok=(String)session.getAttribute("loginok");
   //id
   String myid=(String)session.getAttribute("myid");
		GuestDao dao=new GuestDao();
		
		//List<SimpleDto> list=dao.getAllBoarddatas();
		
		int totalCount;
		int totalPage; //총 페이지수
		int startPage; //각블럭의 시작페이지
		int endPage;  //각 블럭의 마지막페이지
		int start;  //각페이지 시작번호
		int perPage = 3;  //현제페이지 보여질 글의 갯수
		int perBlock = 5;  //한블럭당 보여지는 페이지개수
		int currentPage;  //현재페이지
		int no;
		
		//총갯수
		totalCount=dao.getTotalCount();
		
		//현재 페이지번호 읽기
		if (request.getParameter("currentPage") == null)
			currentPage = 1;
		else
			currentPage = Integer.parseInt(request.getParameter("currentPage"));
		
		//총 페이지 갯수
		totalPage = totalCount / perPage + (totalCount % perPage == 0 ? 0 : 1);
		
		//각 블럭의 시작페이지
		startPage = (currentPage - 1) / perBlock * perBlock + 1;
		endPage = startPage + perBlock - 1;
		
		//총페이지가 8... (6-10... endpage를 8로 수정)
		if (endPage > totalPage)
			endPage = totalPage;
		
		//각페이지에서 불러올 시작번호
		start=(currentPage-1)*perPage;
		
		//각 페이지 에서 필요한 개시글 가져오기
		List<GuestDto> list=dao.getList(start, perPage);
		
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm");
		
		//no=totalCount-(currentPage-1)*perPage;
		

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  ");

    if(loginok!=null){
      out.write("\r\n");
      out.write("    	\r\n");
      out.write("    	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "addform.jsp", out, false);
      out.write("\r\n");
      out.write("    	   <hr align=\"left\" width=\"800\">\r\n");
      out.write("    ");
}
  
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  <div>\r\n");
      out.write("  	  <b>총 ");
      out.print(totalCount );
      out.write("개의 방명록 글이 있습니다</b>\r\n");
      out.write("  	  ");

  	    MemberDao mdao=new MemberDao();
  	  
  	  	for(GuestDto dto:list)
  	  	{
  	  		//이름얻기
  	  		String name=mdao.getName(dto.getMyid());
  	  		
      out.write("\r\n");
      out.write("  	  		\r\n");
      out.write("  	  		<table class=\"table\" style=\"width: 600px;\">\r\n");
      out.write("  	  		  <tr>\r\n");
      out.write("  	  		    <td>\r\n");
      out.write("  	  		    \r\n");
      out.write("  	  		    \r\n");
      out.write("  	  		    ");

  	  		      //각방명록에 달린 댓글목록 가져오기
  	  		      AnswerDao adao=new AnswerDao();
  	  		      List<AnswerDto> alist=adao.getAllAnswers(dto.getNum());
  	  		      
  	  		      
      out.write("\r\n");
      out.write("  	  		    \r\n");
      out.write("  	  		    \r\n");
      out.write("  	  		    <b><span class=\"glyphicon glyphicon-user\"></span>\r\n");
      out.write("  	  		      ");
      out.print(name );
      out.write('(');
      out.print(dto.getMyid() );
      out.write(")</b>\r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      <span class=\"answer\" style=\"cursor: pointer;\" num=\"");
      out.print(dto.getNum());
      out.write("\">댓글");
      out.print(alist.size() );
      out.write("</span>\r\n");
      out.write("  	  		      <span class=\"likes\" style=\"margin-left: 20px; cursor: pointer;\"\r\n");
      out.write("  	  		      num=\"");
      out.print(dto.getNum());
      out.write("\">추천</span>\r\n");
      out.write("  	  		      <span class=\"chu\">");
      out.print(dto.getChu() );
      out.write("</span>\r\n");
      out.write("  	  		      <span class=\"glyphicon glyphicon-heart\" style=\"color: red; font-size: 0px;\"></span>\r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      ");

  	  		        //로그인한 아이디와 글을쓴아이디가 같을경우에만 수정삭제 보이게..(자기글만)
  	  		        if(loginok!=null && dto.getMyid().equals(myid)){
      out.write("\r\n");
      out.write("  	  		        	\r\n");
      out.write("  	  		        	| <a href=\"index.jsp?main=guest/updateform.jsp?num=");
      out.print(dto.getNum() );
      out.write("&currentPage=");
      out.print(currentPage );
      out.write("\" style=\"color: black;\">수정</a>\r\n");
      out.write("  	  		        	| <a href=\"guest/delete.jsp?num=");
      out.print(dto.getNum() );
      out.write("&currentPage=");
      out.print(currentPage );
      out.write("\" style=\"color: black;\">삭제</a>\r\n");
      out.write("  	  		        ");
}
  	  		      
      out.write("\r\n");
      out.write("  	  		      <span class=\"day\">");
      out.print(sdf.format(dto.getWriteday()) );
      out.write("</span>\r\n");
      out.write("  	  		       \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      <!-- 댓글 -->\r\n");
      out.write("  	  		     \r\n");
      out.write("  	  		      <div class=\"answer\">\r\n");
      out.write("	  	  		    ");

	  	  		    if(loginok!=null){
      out.write("\r\n");
      out.write("	  	  		    	\r\n");
      out.write("	  	  		    	<div class=\"answerform\">\r\n");
      out.write("	  	  		    	    <form action=\"guest/answerinsert.jsp\" method=\"post\">\r\n");
      out.write("	  	  		    	    \r\n");
      out.write("	  	  		    	    <!-- hidden -->\r\n");
      out.write("	  	  		    	    <input type=\"hidden\" name=\"num\" value=\"");
      out.print(dto.getNum());
      out.write("\">\r\n");
      out.write("	  	  		    	    <input type=\"hidden\" name=\"myid\" value=\"");
      out.print(myid);
      out.write("\">\r\n");
      out.write("	  	  		    	    <input type=\"hidden\" name=\"currentPage\" value=\"");
      out.print(currentPage);
      out.write("\">\r\n");
      out.write("	  	  		    	    \r\n");
      out.write("	  	  		    	      <table>\r\n");
      out.write("	  	  		    	        <tr>\r\n");
      out.write("	  	  		    	          <td>\r\n");
      out.write("	  	  		    	            <textarea style=\"width: 470px; height: 70px;\"\r\n");
      out.write("	  	  		    	            name=\"content\" required=\"required\" class=\"form-control\"></textarea>\r\n");
      out.write("	  	  		    	          </td>\r\n");
      out.write("	  	  		    	          <td>\r\n");
      out.write("	  	  		    	            <button type=\"submit\" class=\"btn btn-info\"\r\n");
      out.write("	  	  		    	            style=\"width: 70px; height: 70px; \">등록</button>\r\n");
      out.write("	  	  		    	          </td>\r\n");
      out.write("	  	  		    	        </tr>\r\n");
      out.write("	  	  		    	      </table>\r\n");
      out.write("	  	  		    	    </form>\r\n");
      out.write("	  	  		    	</div>\r\n");
      out.write("	  	  		    ");
}
	  	  		    
      out.write("\r\n");
      out.write("	  	  		  \r\n");
      out.write("	  	  		     <div class=\"answerlist\">\r\n");
      out.write("	  	  		       <table class=\"table\" style=\"width: 500px;\">\r\n");
      out.write("	  	  		          ");

	  	  		          for(AnswerDto adto:alist)
	  	  		          {
      out.write("\r\n");
      out.write("	  	  		        	  <tr>\r\n");
      out.write("	  	  		        	    <td width=\"60\" align=\"left\">\r\n");
      out.write("	  	  		        	       <span class=\"glyphicon glyphicon-user\"></span>\r\n");
      out.write("	  	  		        	    </td>\r\n");
      out.write("	  	  		        	    <td>\r\n");
      out.write("	  	  		        	       ");

	  	  		        	       //작성자명얻기
	  	  		        	       String aname=mdao.getName(adto.getMyid()); 
      out.write("\r\n");
      out.write("	  	  		        	       	\r\n");
      out.write("	  	  		        	       	\r\n");
      out.write("	  	  		        	       	<b>");
      out.print(aname );
      out.write("</b>&nbsp; \r\n");
      out.write("	  	  		        	       	");

	  	  		        	       	//글작성자와 댓글쓴 작성자가 같은경우
	  	  		        	       	
	  	  		        	       	if(dto.getMyid().equals(adto.getMyid())){
      out.write("\r\n");
      out.write("	  	  		        	       		\r\n");
      out.write("	  	  		        	       		<span style=\"color: red;\">작성자</span>\r\n");
      out.write("	  	  		        	       	");
}
	  	  		        	       	
      out.write(" \r\n");
      out.write("	  	  		        	       	\r\n");
      out.write("	  	  		        	       	<span style=\"font-size: 9pt; color: gray; margin-left: 20px\">\r\n");
      out.write("	  	  		        	       	  ");
      out.print(sdf.format(adto.getWriteday()) );
      out.write("\r\n");
      out.write("	  	  		        	       	</span>	\r\n");
      out.write("	  	  		        	       	\r\n");
      out.write("	  	  		        	       	");

	  	  		        	       	//댓글삭제는 로그인중이면서 로그인한 아이디와 같을경우에만 삭제아이콘 보이게
	  	  		        	       	if(loginok!=null && adto.getMyid().equals(myid)){
      out.write("\r\n");
      out.write("	  	  		        	       		\r\n");
      out.write("	  	  		        	       		<span class=\"adel glyphicon glyphicon-trash\" idx=\"");
      out.print(adto.getIdx());
      out.write("\"\r\n");
      out.write("	  	  		        	       		style=\"font-size: 12pt; color: green; margin-left: 10pt; cursor: pointer;\"></span>\r\n");
      out.write("	  	  		        	       	");
}
	  	  		        	       	
	  	  		        	       	
      out.write("  \r\n");
      out.write("	  	  		        	       	\r\n");
      out.write("	  	  		        	       	<br>\r\n");
      out.write("	  	  		        	       	<span style=\"font-size: 10pt;\">\r\n");
      out.write("	  	  		        	       	  ");
      out.print(adto.getContent().replace("\n", "<br>") );
      out.write("\r\n");
      out.write("	  	  		        	       	</span>\r\n");
      out.write("	  	  		        	       	<br>		        	      \r\n");
      out.write("	  	  		        	    </td>\r\n");
      out.write("	  	  		        	  </tr>\r\n");
      out.write("	  	  		        	  \r\n");
      out.write("	  	  		          ");
}
	  	  		          
      out.write("\r\n");
      out.write("	  	  		       </table>\r\n");
      out.write("	  	  		     </div>\r\n");
      out.write("	  	  		  \r\n");
      out.write("	  	  		  </div>\r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		    </td>\r\n");
      out.write("  	  		  </tr>\r\n");
      out.write("  	  		  \r\n");
      out.write("  	  		  <tr>\r\n");
      out.write("  	  		    <td>\r\n");
      out.write("  	  		      <!-- 이미지가 null아닌경우만 출력 -->\r\n");
      out.write("  	  		      ");

  	  		        if(dto.getPhotoname()!=null){
      out.write("\r\n");
      out.write("  	  		        	\r\n");
      out.write("  	  		        	<a href=\"save/");
      out.print(dto.getPhotoname());
      out.write("\" target=\"_blank\">\r\n");
      out.write("  	  		        	<img alt=\"\" src=\"save/");
      out.print(dto.getPhotoname());
      out.write("\" align=\"left\"\r\n");
      out.write("  	  		        	style=\"width: 100px;\"></a>\r\n");
      out.write("  	  		        ");
}
  	  		      
      out.write("\r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      ");
      out.print(dto.getContent().replace("\n","<br>"));
      out.write("\r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		      \r\n");
      out.write("  	  		       \r\n");
      out.write("  	  		    </td>\r\n");
      out.write("  	  		  </tr>\r\n");
      out.write("  	  		    \r\n");
      out.write("  	  		</table>\r\n");
      out.write("  	  	");
}
  	  
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  <!-- 페이징 처리 -->\r\n");
      out.write("	<div style=\"width: 500px; text-align: center;\">\r\n");
      out.write("		<ul class=\"pagination\">\r\n");
      out.write("			");

			
			//이전
			if(startPage>1){
				
      out.write("\r\n");
      out.write("				<li>\r\n");
      out.write("					<a href=\"index.jsp?main=guest/guestlist.jsp?currentPage=");
      out.print(startPage-1 );
      out.write("\">이전</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			");
}
			
			
			for(int pp=startPage;pp<=endPage;pp++){
				
				if(pp==currentPage){
					
      out.write("\r\n");
      out.write("					<li class=\"active\">\r\n");
      out.write("						<a href=\"index.jsp?main=guest/guestlist.jsp?currentPage=");
      out.print(pp );
      out.write('"');
      out.write('>');
      out.print(pp );
      out.write("</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				");
 } else{
					
      out.write("\r\n");
      out.write("					<li>\r\n");
      out.write("						<a href=\"index.jsp?main=guest/guestlist.jsp?currentPage=");
      out.print(pp );
      out.write('"');
      out.write('>');
      out.print(pp );
      out.write("</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				");
}
				
			}
			
			//다음
			if(endPage<totalPage){
				
      out.write("\r\n");
      out.write("				<li>\r\n");
      out.write("					<a href=\"index.jsp?main=guest/guestlist.jsp?currentPage=");
      out.print(endPage+1 );
      out.write("\">다음</a>\r\n");
      out.write("				</li>\r\n");
      out.write("			");
}
			
      out.write("\r\n");
      out.write("		</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
