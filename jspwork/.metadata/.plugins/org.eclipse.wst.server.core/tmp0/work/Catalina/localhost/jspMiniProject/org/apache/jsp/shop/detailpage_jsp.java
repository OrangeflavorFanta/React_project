/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-09 03:21:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.NumberFormat;
import data.Dto.ShopDto;
import data.Dao.ShopDao;
import data.Dao.MemberDao;

public final class detailpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.Dto.ShopDto");
    _jspx_imports_classes.add("data.Dao.MemberDao");
    _jspx_imports_classes.add("data.Dao.ShopDao");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Gaegu&family=Gowun+Batang&family=Hi+Melody&family=Noto+Serif+KR:wght@300&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("img.large{\r\n");
      out.write("\r\n");
      out.write("width: 450px;\r\n");
      out.write("height: 550px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");

	String shopnum=request.getParameter("shopnum");
	//로그인 상태
	String loginok=(String)session.getAttribute("loginok");
	//로그인한 아이디
	String myid=(String)session.getAttribute("myid");
	
	//아이디에 해당하는 멤버의 시퀀스 번호
	MemberDao mdao=new MemberDao();
	String num=mdao.getNum(myid);
	
	//해당상품에 대한 데이터
	ShopDao sdao=new ShopDao();
	ShopDto dto=sdao.getShopData(shopnum);


      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<form id=\"frm\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- hidden: num, shopnum(장바구니db) -->\r\n");
      out.write("	<input type=\"hidden\" name=\"shopnum\" value=\"");
      out.print(shopnum);
      out.write("\">\r\n");
      out.write("	<input type=\"hidden\" name=\"num\" value=\"");
      out.print(num);
      out.write("\">\r\n");
      out.write("	\r\n");
      out.write("	<table style=\"width: 800px;\">\r\n");
      out.write("	<tr>\r\n");
      out.write("	<td style=\"width: 500px;\">\r\n");
      out.write("		<img alt=\"\" src=\"shopsave/");
      out.print(dto.getPhoto() );
      out.write("\" class=\"large img-thumbnail\">\r\n");
      out.write("\r\n");
      out.write("	</td>\r\n");
      out.write("	\r\n");
      out.write("	<td style=\"width: 300px;\" valign=\"top\">\r\n");
      out.write("	<h3>카테고리:  ");
      out.print(dto.getCategory());
      out.write("</h3>\r\n");
      out.write("	<h3>상품명:  ");
      out.print(dto.getSangpum() );
      out.write("</h3>\r\n");
      out.write("	");

		NumberFormat nf=NumberFormat.getCurrencyInstance();
	
	
      out.write("\r\n");
      out.write("	<h3>가격: ");
      out.print(nf.format(dto.getPrice()) );
      out.write("</h3>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 갯수선택 -->\r\n");
      out.write("	<h3>갯수: \r\n");
      out.write("		<input type=\"number\" min=\"1\" max=\"10\" value=\"1\"\r\n");
      out.write("		step=\"1\" name=\"cnt\">\r\n");
      out.write("	</h3>\r\n");
      out.write("	\r\n");
      out.write("	<div style=\"margin-top: 100px; margin-left: 60px;\">\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-success\" \r\n");
      out.write("	style=\"width: 100px;\" id=\"btncart\">장바구니</button>\r\n");
      out.write("	\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-info\"\r\n");
      out.write("	style=\"width: 100px;\" onclick=\"location.href='index.jsp?main=shop/shoplist.jsp'\">상품목록</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	$(\"#btncart\").click(function(){\r\n");
      out.write("		//form태그 모든 값 가져오기(name)\r\n");
      out.write("		var formdata=$(\"#frm\").serialize();\r\n");
      out.write("		alert(formdata);\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$,ajax({\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
